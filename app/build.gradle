apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'


Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

def static getGitVersion() {
    def cmd = 'git rev-list HEAD --count'
    try {
        return cmd.execute().text.trim().toInteger()
    } catch (Throwable th) {
        return 1
    }
}

def static getBuildTime() {
    try {
        return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
    } catch (Throwable th) {
        return new Date().toLocaleString()
    }
}

android {
    compileSdkVersion rootProject.ext.androidVersion.compileSdkVersion
    buildToolsVersion rootProject.ext.androidVersion.buildToolsVersion

    defaultConfig {

        applicationId rootProject.ext.androidVersion.applicationId
        minSdkVersion rootProject.ext.androidVersion.minSdkVersion
        targetSdkVersion rootProject.ext.androidVersion.targetSdkVersion
        versionCode getGitVersion()
        versionName rootProject.ext.androidVersion.versionName


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(path: ':kit')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}