// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"

buildscript {
    ext.gradle_version = "3.3.2"
    ext.kotlin_version = '1.3.0'

    repositories {
        jcenter()

        maven { url "https://jitpack.io" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        mavenCentral()

        google()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()

        maven { url "https://jitpack.io" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        mavenCentral()

        google()
    }
}

subprojects {
    //设置统一的配置
    afterEvaluate { Project project ->
        ext.pluginContainer = project.getPlugins()
        def hasAppPlugin = ext.pluginContainer.hasPlugin("com.android.application")
        def hasLibPlugin = ext.pluginContainer.hasPlugin("com.android.library")

        if (hasAppPlugin || hasLibPlugin) {
            android {
                lintOptions {
                    //关闭MissingTranslation
                    abortOnError false
                    // 防止在发布的时候出现因MissingTranslation导致Build Failed!
                    disable 'MissingTranslation'
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

